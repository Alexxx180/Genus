plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.genusllc'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task dist {
    group 'build'
    dependsOn build
    doLast {
        mkdir 'build/dist'
        copy {
            from('build/libs')
            into('build/dist')
            include '*.jar'
        }
        copy {
            from(sourceSets.main.runtimeClasspath)
            into('build/dist/lib')
            include '*.jar'
        }
    }
}

/*task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(configurations.detachedConfiguration(""))
}*/

stage.dependsOn(dist)

/*
gradle.taskGraph.whenReady {
  taskGraph ->
    if (taskGraph.hasTask(stage)) {
      test.enabled = false
    }
}
*/